#!/usr/bin/bash
# SPDX-FileCopyrightText: 2025 Sangoma US Inc.
#
# SPDX-License-Identifier: GPL-2.0-only
#
# abuild-fpbx-installer-iso
#
# Copyright (C) 2024-2025, Sangoma US Inc.

usage() {
	echo "
Minimal Usage: $0 -i debian_input.iso

Required:
	-i	Path to input ISO file.

Optional:
	-b	Build version - defaults to yymm.1 eg. 2504.1 (where .1 is the bump)
	-p	Path to mini input ISO for network installs with PXE and Cobbler.
	-k	Locked kernel version. Affects PUB, UPG and INT spice (helps DAHDI hardware.)

Examples:
	$0 -i /path/to/debian-12.8.0-amd64-netinst.iso
	$0 -i /path/to/debian-12.8.0-amd64-netinst.iso -p /path/to/mini-debian.iso
	$0 -i /path/to/debian-12.8.0-amd64-netinst.iso -p /path/to/mini-debian.iso -b 2504.3
	$0 -i /path/to/debian-12.8.0-amd64-netinst.iso -p /path/to/mini-debian.iso -b 2504.3 -k 6.1.0-26-amd64

You can change more options by setting Ansible variables on a per host or group basis.
This shell script is a simple wrapper around ansible-playbook to run on your localhost.
Please see README.md for more information.
" 1>&2
	exit 1
}

while getopts ":b:i:k:p:" opt; do
	case "${opt}" in
		b)
			str_script_build=${OPTARG}
			;;
		i)
			fn_iso_input=${OPTARG}
			;;
		k)
			str_locked_kernel=${OPTARG}
			;;
		p)
			fn_mini_iso_input=${OPTARG}
			;;
		*)
			usage
			;;
	esac
done
shift $((OPTIND-1))

if [ -z "${fn_iso_input}" ]; then
	usage
fi

extra_vars="fn_iso_input=${fn_iso_input}"

if [ -n "${fn_mini_iso_input}" ]; then
	extra_vars="${extra_vars} fn_mini_iso_input=${fn_mini_iso_input}"
fi

if [ -n "${str_script_build}" ]; then
	extra_vars="${extra_vars} str_script_build=${str_script_build}"
fi

if [ -n "${str_locked_kernel}" ]; then
	extra_vars="${extra_vars} str_locked_kernel=${str_locked_kernel}"
fi

ansible-playbook \
	--inventory localhost, \
	--connection=local \
	--extra-vars "${extra_vars}" \
	default-playbook.yml

